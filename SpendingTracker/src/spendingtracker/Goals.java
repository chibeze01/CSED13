/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package spendingtracker;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.text.DecimalFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author adam-
 */
public class Goals extends javax.swing.JFrame {
    
    private MainMenu main;

    /**
     * Creates new form Spending
     */
    public Goals(MainMenu main) {
        initComponents();
        this.main = main;
        loadTable();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        goalsTable = new javax.swing.JTable();
        addGoal = new javax.swing.JButton();
        addGoal1 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButton1.setText("Close");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        goalsTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        goalsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Goal Description", "Goal End Date", "Goal Met"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        goalsTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(goalsTable);
        if (goalsTable.getColumnModel().getColumnCount() > 0) {
            goalsTable.getColumnModel().getColumn(1).setPreferredWidth(150);
            goalsTable.getColumnModel().getColumn(1).setMaxWidth(750);
            goalsTable.getColumnModel().getColumn(2).setPreferredWidth(100);
            goalsTable.getColumnModel().getColumn(2).setMaxWidth(500);
        }

        addGoal.setText("Add Goal");
        addGoal.setToolTipText("");
        addGoal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addGoalActionPerformed(evt);
            }
        });

        addGoal1.setText("Set Selected Goal Met");
        addGoal1.setToolTipText("");
        addGoal1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addGoal1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(addGoal1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addGoal)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 872, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(addGoal)
                    .addComponent(addGoal1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private int countWeeksBetween(LocalDate startDate, LocalDate endDate){
        int weeksBetween = 1;
        
        
        // while start date is before the end date...
        while (startDate.isBefore(endDate)){
            // add a week then check if start date passes end date
            startDate = startDate.plusWeeks(1);
            weeksBetween++;
        }
        
        return weeksBetween;
    }
    
    protected void loadTable(){
        
        String line;
        BufferedReader br = null;
         
        try {
            br = new BufferedReader(new FileReader(main.userName + "goals.csv"));
            DefaultTableModel tableModel = (DefaultTableModel) goalsTable.getModel();
            
            // clear rows
            tableModel.setRowCount(0);            
            
            
            while ((line = br.readLine()) != null && line.split(",").length > 1) {

                System.out.println(line);
                
                // use comma as separator
                String[] item = line.split(",");
                
                String goalDesc = item[0];
                String endDate = item[1];
                boolean goalMet = Boolean.parseBoolean(item[2]);
                
                
                
                
                tableModel.addRow(new Object[]{goalDesc, endDate, goalMet});
            }
            
            br.close();

        } catch (FileNotFoundException e) {
            System.out.print("not found");
            // create file and re-load table
            try{
                FileWriter writer = new FileWriter(main.userName + "goals.csv", false);
                writer.close();
                loadTable();
            } catch(IOException ignore){}
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    
    private void setGoalMet(int index){
        
        try {
            BufferedReader br = new BufferedReader(new FileReader(main.userName + "goals.csv"));
            String stringToWrite = "";
            
            String line;
            
            int i = 0;
            
            while ((line = br.readLine()) != null){
                
                // if not the entry we want to remove, then add to string
                if (i == index){
                    // if i greater than index, modify balance
                    String[] parts = line.split(",");
                    
                    // set end value as true if index
                    stringToWrite = stringToWrite + parts[0] + "," + parts[1] + ",true\n";
                    
                } else{
                    stringToWrite = stringToWrite + line + "\n";
                }
                
                i++;
            }
            
            
            // create file writer, set append to FALSE, as we want to overwrite
            FileWriter writer = new FileWriter(main.userName + "goals.csv", false);
            
            // write string to file
            writer.write(stringToWrite);
            
            // close writer
            writer.close();
            br.close();
            
            loadTable();
            
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
        
        
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void addGoalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addGoalActionPerformed
        // TODO create add goal frame, set visible
        AddGoal newGoal = new AddGoal(main, this);
        newGoal.setVisible(true);
        
    }//GEN-LAST:event_addGoalActionPerformed

    private void addGoal1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addGoal1ActionPerformed
        // TODO add your handling code here: 
        int rowSelected = goalsTable.getSelectedRow();
        
        // if a row is selected then remove
        if (rowSelected != -1){
            this.setGoalMet(rowSelected);
            this.loadTable();
        }
    }//GEN-LAST:event_addGoal1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addGoal;
    private javax.swing.JButton addGoal1;
    private javax.swing.JTable goalsTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
